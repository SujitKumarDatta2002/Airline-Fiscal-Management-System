{"ast":null,"code":"var _jsxFileName = \"E:\\\\Airline Fiscal Management System\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// const AdminDashboard = ({ api }) => {\n//   const [activeTab, setActiveTab] = useState(\"flights\");\n\n//   return (\n//     <div className=\"bg-white p-8 rounded-lg shadow-xl\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Admin Dashboard</h1>\n//       <div className=\"border-b border-gray-200\">\n//         <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n//           <button\n//             onClick={() => setActiveTab(\"flights\")}\n//             className={`${\n//               activeTab === \"flights\"\n//                 ? \"border-blue-500 text-blue-600\"\n//                 : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n//             } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n//           >\n//             Manage Flights\n//           </button>\n//           <button\n//             onClick={() => setActiveTab(\"users\")}\n//             className={`${\n//               activeTab === \"users\"\n//                 ? \"border-blue-500 text-blue-600\"\n//                 : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n//             } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n//           >\n//             Manage User Tokens\n//           </button>\n//         </nav>\n//       </div>\n\n//       <div className=\"mt-8\">\n//         {activeTab === \"flights\" && <FlightManager api={api} />}\n//         {activeTab === \"users\" && <UserManager api={api} />}\n//       </div>\n//     </div>\n//   );\n// };\n\n// const FlightManager = ({ api }) => {\n//   const [flights, setFlights] = useState([]);\n//   const [formData, setFormData] = useState({\n//     flightNumber: \"\",\n//     origin: \"\",\n//     destination: \"\",\n//     departureTime: \"\",\n//     arrivalTime: \"\",\n//     price: \"\",\n//     totalSeats: 60,\n//   });\n//   const [editingFlight, setEditingFlight] = useState(null);\n\n//   useEffect(() => {\n//     const fetchFlights = async () => {\n//       const { data } = await api.get(\"/flights\");\n//       setFlights(data);\n//     };\n//     fetchFlights();\n//   }, [api]);\n\n//   const handleChange = (e) =>\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (editingFlight) {\n//         // Update existing flight\n//         const { data } = await api.put(\n//           `/admin/flights/${editingFlight._id}`,\n//           formData\n//         );\n//         setFlights(flights.map((f) => (f._id === data._id ? data : f)));\n//       } else {\n//         // Add new flight\n//         const { data } = await api.post(\"/admin/flights\", formData);\n//         setFlights([...flights, data]);\n//       }\n//       resetForm();\n//     } catch (error) {\n//       console.error(\"Failed to save flight\", error);\n//       alert(\"Error: Could not save flight.\");\n//     }\n//   };\n\n//   const handleEdit = (flight) => {\n//     setEditingFlight(flight);\n//     setFormData({\n//       flightNumber: flight.flightNumber,\n//       origin: flight.origin,\n//       destination: flight.destination,\n//       // Formatting date for input type datetime-local\n//       departureTime: new Date(flight.departureTime).toISOString().slice(0, 16),\n//       arrivalTime: new Date(flight.arrivalTime).toISOString().slice(0, 16),\n//       price: flight.price,\n//       totalSeats: flight.totalSeats,\n//     });\n//   };\n\n//   const resetForm = () => {\n//     setEditingFlight(null);\n//     setFormData({\n//       flightNumber: \"\",\n//       origin: \"\",\n//       destination: \"\",\n//       departureTime: \"\",\n//       arrivalTime: \"\",\n//       price: \"\",\n//       totalSeats: 60,\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"mb-8 p-4 border rounded-lg grid grid-cols-2 gap-4\"\n//       >\n//         <h3 className=\"col-span-2 text-xl font-semibold\">\n//           {editingFlight ? \"Edit Flight\" : \"Add New Flight\"}\n//         </h3>\n//         <input\n//           name=\"flightNumber\"\n//           value={formData.flightNumber}\n//           onChange={handleChange}\n//           placeholder=\"Flight Number\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"origin\"\n//           value={formData.origin}\n//           onChange={handleChange}\n//           placeholder=\"Origin\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"destination\"\n//           value={formData.destination}\n//           onChange={handleChange}\n//           placeholder=\"Destination\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"price\"\n//           type=\"number\"\n//           value={formData.price}\n//           onChange={handleChange}\n//           placeholder=\"Price\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"departureTime\"\n//           type=\"datetime-local\"\n//           value={formData.departureTime}\n//           onChange={handleChange}\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"arrivalTime\"\n//           type=\"datetime-local\"\n//           value={formData.arrivalTime}\n//           onChange={handleChange}\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <div className=\"col-span-2 flex justify-end space-x-2\">\n//           {editingFlight && (\n//             <button\n//               type=\"button\"\n//               onClick={resetForm}\n//               className=\"bg-gray-500 text-white px-4 py-2 rounded\"\n//             >\n//               Cancel\n//             </button>\n//           )}\n//           <button\n//             type=\"submit\"\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n//           >\n//             {editingFlight ? \"Update Flight\" : \"Add Flight\"}\n//           </button>\n//         </div>\n//       </form>\n\n//       <div>\n//         <h3 className=\"text-xl font-semibold mb-4\">Existing Flights</h3>\n//         <div className=\"space-y-2\">\n//           {flights.map((flight) => (\n//             <div\n//               key={flight._id}\n//               className=\"flex justify-between items-center p-2 border rounded\"\n//             >\n//               <span>\n//                 {flight.flightNumber} - {flight.origin} to {flight.destination}\n//               </span>\n//               <button\n//                 onClick={() => handleEdit(flight)}\n//                 className=\"bg-yellow-500 text-white px-3 py-1 rounded text-sm\"\n//               >\n//                 Edit\n//               </button>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const UserManager = ({ api }) => {\n//   const [users, setUsers] = useState([]);\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [tokens, setTokens] = useState(0);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       const { data } = await api.get(\"/admin/users\");\n//       setUsers(data);\n//     };\n//     fetchUsers();\n//   }, [api]);\n\n//   const handleSelectUser = (user) => {\n//     setSelectedUser(user);\n//     setTokens(user.tokens);\n//   };\n\n//   const handleTokenUpdate = async (e) => {\n//     e.preventDefault();\n//     if (!selectedUser) return;\n//     try {\n//       const { data } = await api.put(\n//         `/admin/users/${selectedUser._id}/tokens`,\n//         { tokens }\n//       );\n//       setUsers(users.map((u) => (u._id === data.user._id ? data.user : u)));\n//       alert(\"Tokens updated successfully!\");\n//     } catch (error) {\n//       console.error(\"Failed to update tokens\", error);\n//       alert(\"Error: Could not update tokens.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n//       <div>\n//         <h3 className=\"text-xl font-semibold mb-4\">All Users</h3>\n//         <div className=\"space-y-2\">\n//           {users\n//             .filter((u) => u.role === \"user\")\n//             .map((user) => (\n//               <div\n//                 key={user._id}\n//                 className=\"flex justify-between items-center p-2 border rounded\"\n//               >\n//                 <span>\n//                   {user.name} ({user.email}) - Tokens: {user.tokens}\n//                 </span>\n//                 <button\n//                   onClick={() => handleSelectUser(user)}\n//                   className=\"bg-green-500 text-white px-3 py-1 rounded text-sm\"\n//                 >\n//                   Manage\n//                 </button>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//       {selectedUser && (\n//         <div className=\"p-4 border rounded-lg\">\n//           <h3 className=\"text-xl font-semibold mb-4\">\n//             Manage Tokens for {selectedUser.name}\n//           </h3>\n//           <form onSubmit={handleTokenUpdate}>\n//             <label className=\"block mb-2\">Set Token Amount:</label>\n//             <input\n//               type=\"number\"\n//               value={tokens}\n//               onChange={(e) => setTokens(e.target.value)}\n//               className=\"w-full p-2 border rounded mb-4\"\n//             />\n//             <button\n//               type=\"submit\"\n//               className=\"w-full bg-blue-500 text-white px-4 py-2 rounded\"\n//             >\n//               Update Tokens\n//             </button>\n//           </form>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\n// frontend/src/components/AdminDashboard.js\nimport React, { useState, useEffect } from \"react\";\n\n// --- Main Admin Dashboard Component ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = ({\n  api\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"flights\"); // 'flights', 'users', 'employees', 'report'\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-lg shadow-xl min-h-[600px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"-mb-px flex space-x-8\",\n        \"aria-label\": \"Tabs\",\n        children: [/*#__PURE__*/_jsxDEV(TabButton, {\n          activeTab: activeTab,\n          tabName: \"flights\",\n          onClick: setActiveTab,\n          children: \"Manage Flights & Costs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabButton, {\n          activeTab: activeTab,\n          tabName: \"users\",\n          onClick: setActiveTab,\n          children: \"Manage User Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabButton, {\n          activeTab: activeTab,\n          tabName: \"employees\",\n          onClick: setActiveTab,\n          children: \"Employee Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabButton, {\n          activeTab: activeTab,\n          tabName: \"report\",\n          onClick: setActiveTab,\n          children: \"Financial Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [activeTab === \"flights\" && /*#__PURE__*/_jsxDEV(FlightManager, {\n        api: api\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 37\n      }, this), activeTab === \"users\" && /*#__PURE__*/_jsxDEV(UserManager, {\n        api: api\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 35\n      }, this), activeTab === \"employees\" && /*#__PURE__*/_jsxDEV(EmployeeManager, {\n        api: api\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 39\n      }, this), activeTab === \"report\" && /*#__PURE__*/_jsxDEV(FinancialReport, {\n        api: api\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Helper Components for Tabs and Modals ---\n_s(AdminDashboard, \"SMZhgG4kdbf+PR3rnIi/lHaA/kA=\");\n_c = AdminDashboard;\nconst TabButton = ({\n  activeTab,\n  tabName,\n  onClick,\n  children\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: () => onClick(tabName),\n  className: `${activeTab === tabName ? \"border-blue-500 text-blue-600\" : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"} whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm transition-colors`,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 359,\n  columnNumber: 3\n}, this);\n_c2 = TabButton;\nconst Modal = ({\n  children,\n  onClose\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-center items-center\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-lg shadow-2xl w-full max-w-md relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: \"absolute top-4 right-4 text-gray-500 hover:text-gray-800 text-2xl\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 372,\n  columnNumber: 3\n}, this);\n\n// // --- Flight & Cost Manager Sub-component ---\n// const FlightManager = ({ api }) => {\n//   const [flights, setFlights] = useState([]);\n//   const [formData, setFormData] = useState({\n//     flightNumber: \"\",\n//     origin: \"\",\n//     destination: \"\",\n//     departureTime: \"\",\n//     arrivalTime: \"\",\n//     price: \"\",\n//     totalSeats: 60,\n//   });\n//   const [editingFlight, setEditingFlight] = useState(null);\n//   const [isCostModalOpen, setIsCostModalOpen] = useState(false);\n//   const [selectedFlightForCost, setSelectedFlightForCost] = useState(null);\n\n//   useEffect(() => {\n//     fetchFlights();\n//   }, []);\n\n//   const fetchFlights = async () => {\n//     const { data } = await api.get(\"/flights\");\n//     setFlights(data);\n//   };\n\n//   const handleChange = (e) =>\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (editingFlight) {\n//         const { data } = await api.put(\n//           `/admin/flights/${editingFlight._id}`,\n//           formData\n//         );\n//         setFlights(flights.map((f) => (f._id === data._id ? data : f)));\n//       } else {\n//         const { data } = await api.post(\"/admin/flights\", formData);\n//         setFlights([...flights, data]);\n//       }\n//       resetForm();\n//     } catch (error) {\n//       console.error(\"Failed to save flight\", error);\n//       alert(\"Error: Could not save flight.\");\n//     }\n//   };\n\n//   const handleEdit = (flight) => {\n//     setEditingFlight(flight);\n//     setFormData({\n//       flightNumber: flight.flightNumber,\n//       origin: flight.origin,\n//       destination: flight.destination,\n//       departureTime: new Date(flight.departureTime).toISOString().slice(0, 16),\n//       arrivalTime: new Date(flight.arrivalTime).toISOString().slice(0, 16),\n//       price: flight.price,\n//       totalSeats: flight.totalSeats,\n//     });\n//   };\n\n//   const resetForm = () => {\n//     setEditingFlight(null);\n//     setFormData({\n//       flightNumber: \"\",\n//       origin: \"\",\n//       destination: \"\",\n//       departureTime: \"\",\n//       arrivalTime: \"\",\n//       price: \"\",\n//       totalSeats: 60,\n//     });\n//   };\n\n//   const openCostModal = (flight) => {\n//     setSelectedFlightForCost(flight);\n//     setIsCostModalOpen(true);\n//   };\n\n//   return (\n//     <div>\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"mb-8 p-4 border rounded-lg grid grid-cols-1 md:grid-cols-2 gap-4\"\n//       >\n//         <h3 className=\"col-span-1 md:col-span-2 text-xl font-semibold\">\n//           {editingFlight ? \"Edit Flight\" : \"Add New Flight\"}\n//         </h3>\n//         <input\n//           name=\"flightNumber\"\n//           value={formData.flightNumber}\n//           onChange={handleChange}\n//           placeholder=\"Flight Number\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"origin\"\n//           value={formData.origin}\n//           onChange={handleChange}\n//           placeholder=\"Origin\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"destination\"\n//           value={formData.destination}\n//           onChange={handleChange}\n//           placeholder=\"Destination\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"price\"\n//           type=\"number\"\n//           value={formData.price}\n//           onChange={handleChange}\n//           placeholder=\"Price\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"departureTime\"\n//           type=\"datetime-local\"\n//           value={formData.departureTime}\n//           onChange={handleChange}\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"arrivalTime\"\n//           type=\"datetime-local\"\n//           value={formData.arrivalTime}\n//           onChange={handleChange}\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <div className=\"col-span-1 md:col-span-2 flex justify-end space-x-2\">\n//           {editingFlight && (\n//             <button\n//               type=\"button\"\n//               onClick={resetForm}\n//               className=\"bg-gray-500 text-white px-4 py-2 rounded\"\n//             >\n//               Cancel\n//             </button>\n//           )}\n//           <button\n//             type=\"submit\"\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n//           >\n//             {editingFlight ? \"Update Flight\" : \"Add Flight\"}\n//           </button>\n//         </div>\n//       </form>\n\n//       <div>\n//         <h3 className=\"text-xl font-semibold mb-4\">Existing Flights</h3>\n//         <div className=\"space-y-2\">\n//           {flights.map((flight) => (\n//             <div\n//               key={flight._id}\n//               className=\"flex justify-between items-center p-3 border rounded-lg bg-gray-50\"\n//             >\n//               <span>\n//                 {flight.flightNumber} - {flight.origin} to {flight.destination}\n//               </span>\n//               <div className=\"space-x-2\">\n//                 <button\n//                   onClick={() => handleEdit(flight)}\n//                   className=\"bg-yellow-500 text-white px-3 py-1 rounded text-sm hover:bg-yellow-600\"\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   onClick={() => openCostModal(flight)}\n//                   className=\"bg-cyan-500 text-white px-3 py-1 rounded text-sm hover:bg-cyan-600\"\n//                 >\n//                   Manage Costs\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       {isCostModalOpen && (\n//         <CostManagerModal\n//           flight={selectedFlightForCost}\n//           api={api}\n//           onClose={() => setIsCostModalOpen(false)}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // --- Cost Manager Modal ---\n// const CostManagerModal = ({ flight, api, onClose }) => {\n//   const [costs, setCosts] = useState([]);\n//   const [costType, setCostType] = useState(\"Fuel\");\n//   const [amount, setAmount] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchCosts = async () => {\n//       const { data } = await api.get(`/admin/costs/${flight._id}`);\n//       setCosts(data);\n//     };\n//     fetchCosts();\n//   }, [api, flight._id]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const { data } = await api.post(\"/admin/costs\", {\n//         flight: flight._id,\n//         costType,\n//         amount,\n//         description,\n//       });\n//       setCosts([...costs, data]);\n//       setAmount(\"\");\n//       setDescription(\"\");\n//     } catch (error) {\n//       console.error(\"Failed to add cost\", error);\n//       alert(\"Error: Could not add cost.\");\n//     }\n//   };\n\n//   return (\n//     <Modal onClose={onClose}>\n//       <h2 className=\"text-2xl font-bold mb-4\">\n//         Manage Costs for {flight.flightNumber}\n//       </h2>\n//       <form onSubmit={handleSubmit} className=\"mb-6\">\n//         <h3 className=\"text-lg font-semibold mb-2\">Add New Cost</h3>\n//         <div className=\"grid grid-cols-2 gap-4\">\n//           <select\n//             value={costType}\n//             onChange={(e) => setCostType(e.target.value)}\n//             className=\"p-2 border rounded\"\n//           >\n//             <option>Fuel</option>\n//             <option>Maintenance</option>\n//           </select>\n//           <input\n//             type=\"number\"\n//             value={amount}\n//             onChange={(e) => setAmount(e.target.value)}\n//             placeholder=\"Amount (₹)\"\n//             className=\"p-2 border rounded\"\n//             required\n//           />\n//           <input\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             placeholder=\"Description (optional)\"\n//             className=\"p-2 border rounded col-span-2\"\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"mt-4 w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n//         >\n//           Add Cost\n//         </button>\n//       </form>\n//       <div>\n//         <h3 className=\"text-lg font-semibold mb-2\">Existing Costs</h3>\n//         <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n//           {costs.length > 0 ? (\n//             costs.map((cost) => (\n//               <div\n//                 key={cost._id}\n//                 className=\"flex justify-between p-2 bg-gray-100 rounded\"\n//               >\n//                 <span>\n//                   {cost.costType}: ₹{cost.amount}\n//                 </span>\n//                 <span className=\"text-sm text-gray-500\">\n//                   {cost.description}\n//                 </span>\n//               </div>\n//             ))\n//           ) : (\n//             <p className=\"text-gray-500\">No costs recorded for this flight.</p>\n//           )}\n//         </div>\n//       </div>\n//     </Modal>\n//   );\n// };\n\n// // --- Employee Manager Sub-component ---\n// const EmployeeManager = ({ api }) => {\n//   const [employees, setEmployees] = useState([]);\n//   const [formData, setFormData] = useState({ name: \"\", role: \"\", salary: \"\" });\n\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       const { data } = await api.get(\"/admin/employees\");\n//       setEmployees(data);\n//     };\n//     fetchEmployees();\n//   }, [api]);\n\n//   const handleChange = (e) =>\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const { data } = await api.post(\"/admin/employees\", formData);\n//       setEmployees([...employees, data]);\n//       setFormData({ name: \"\", role: \"\", salary: \"\" });\n//     } catch (error) {\n//       console.error(\"Failed to add employee\", error);\n//       alert(\"Error: Could not add employee.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"mb-8 p-4 border rounded-lg grid grid-cols-1 md:grid-cols-3 gap-4\"\n//       >\n//         <h3 className=\"col-span-1 md:col-span-3 text-xl font-semibold\">\n//           Add New Employee\n//         </h3>\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Employee Name\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"role\"\n//           value={formData.role}\n//           onChange={handleChange}\n//           placeholder=\"Role (e.g., Pilot, Agent)\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           name=\"salary\"\n//           type=\"number\"\n//           value={formData.salary}\n//           onChange={handleChange}\n//           placeholder=\"Salary (Monthly, ₹)\"\n//           className=\"p-2 border rounded\"\n//           required\n//         />\n//         <div className=\"col-span-1 md:col-span-3\">\n//           <button\n//             type=\"submit\"\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded w-full\"\n//           >\n//             Add Employee\n//           </button>\n//         </div>\n//       </form>\n//       <div>\n//         <h3 className=\"text-xl font-semibold mb-4\">Employee List</h3>\n//         <div className=\"space-y-2\">\n//           {employees.map((emp) => (\n//             <div\n//               key={emp._id}\n//               className=\"grid grid-cols-3 gap-4 items-center p-2 border rounded\"\n//             >\n//               <span className=\"font-medium\">{emp.name}</span>\n//               <span className=\"text-gray-600\">{emp.role}</span>\n//               <span className=\"text-green-600 font-semibold\">\n//                 ₹{emp.salary.toLocaleString()}\n//               </span>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // --- Financial Report Sub-component ---\n// const FinancialReport = ({ api }) => {\n//   const [report, setReport] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchReport = async () => {\n//       try {\n//         const { data } = await api.get(\"/admin/report\");\n//         setReport(data);\n//       } catch (error) {\n//         console.error(\"Failed to fetch report\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchReport();\n//   }, [api]);\n\n//   if (loading) return <p>Generating report...</p>;\n//   if (!report) return <p>Could not generate report.</p>;\n\n//   return (\n//     <div>\n//       <h2 className=\"text-2xl font-bold mb-6\">Financial Summary</h2>\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-red-100 p-4 rounded-lg\">\n//           <h3 className=\"text-red-800 font-bold\">Total Fuel Cost</h3>\n//           <p className=\"text-2xl font-semibold\">\n//             ₹{report.summary.totalFuelCost.toLocaleString()}\n//           </p>\n//         </div>\n//         <div className=\"bg-yellow-100 p-4 rounded-lg\">\n//           <h3 className=\"text-yellow-800 font-bold\">Total Maintenance Cost</h3>\n//           <p className=\"text-2xl font-semibold\">\n//             ₹{report.summary.totalMaintenanceCost.toLocaleString()}\n//           </p>\n//         </div>\n//         <div className=\"bg-blue-100 p-4 rounded-lg\">\n//           <h3 className=\"text-blue-800 font-bold\">Total Salary Expenditure</h3>\n//           <p className=\"text-2xl font-semibold\">\n//             ₹{report.summary.totalSalaryCost.toLocaleString()}\n//           </p>\n//         </div>\n//         <div className=\"bg-green-100 p-4 rounded-lg\">\n//           <h3 className=\"text-green-800 font-bold\">Total Operational Cost</h3>\n//           <p className=\"text-2xl font-semibold\">\n//             ₹{report.summary.operationalCost.toLocaleString()}\n//           </p>\n//         </div>\n//       </div>\n//       <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//         <div>\n//           <h3 className=\"text-xl font-semibold mb-4\">\n//             Detailed Cost Breakdown\n//           </h3>\n//           <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n//             {report.allCosts.map((cost) => (\n//               <div\n//                 key={cost._id}\n//                 className=\"grid grid-cols-3 gap-4 p-2 border rounded\"\n//               >\n//                 <span>{cost.flight?.flightNumber || \"N/A\"}</span>\n//                 <span>{cost.costType}</span>\n//                 <span className=\"font-semibold\">\n//                   ₹{cost.amount.toLocaleString()}\n//                 </span>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//         <div>\n//           <h3 className=\"text-xl font-semibold mb-4\">Employee Salary List</h3>\n//           <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n//             {report.allEmployees.map((emp) => (\n//               <div\n//                 key={emp._id}\n//                 className=\"grid grid-cols-3 gap-4 p-2 border rounded\"\n//               >\n//                 <span className=\"font-medium\">{emp.name}</span>\n//                 <span className=\"text-gray-600\">{emp.role}</span>\n//                 <span className=\"font-semibold\">\n//                   ₹{emp.salary.toLocaleString()}\n//                 </span>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// --- User Manager Sub-component ---\n_c3 = Modal;\nconst UserManager = ({\n  api\n}) => {\n  _s2();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [tokens, setTokens] = useState(0);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const {\n        data\n      } = await api.get(\"/admin/users\");\n      setUsers(data);\n    };\n    fetchUsers();\n  }, [api]);\n  const handleSelectUser = user => {\n    setSelectedUser(user);\n    setTokens(user.tokens);\n  };\n  const handleTokenUpdate = async e => {\n    e.preventDefault();\n    if (!selectedUser) return;\n    try {\n      const {\n        data\n      } = await api.put(`/admin/users/${selectedUser._id}/tokens`, {\n        tokens\n      });\n      setUsers(users.map(u => u._id === data.user._id ? data.user : u));\n      alert(\"Tokens updated successfully!\");\n    } catch (error) {\n      console.error(\"Failed to update tokens\", error);\n      alert(\"Error: Could not update tokens.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"All Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: users.filter(u => u.role === \"user\").map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [user.name, \" (\", user.email, \") - Tokens: \", user.tokens]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectUser(user),\n            className: \"bg-green-500 text-white px-3 py-1 rounded text-sm\",\n            children: \"Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: [\"Manage Tokens for \", selectedUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleTokenUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: \"Set Token Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: tokens,\n          onChange: e => setTokens(e.target.value),\n          className: \"w-full p-2 border rounded mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-blue-500 text-white px-4 py-2 rounded\",\n          children: \"Update Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 901,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserManager, \"ALx7BlfZBPqhf/CMjMzd9fhSSk0=\");\n_c4 = UserManager;\nexport default AdminDashboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AdminDashboard\");\n$RefreshReg$(_c2, \"TabButton\");\n$RefreshReg$(_c3, \"Modal\");\n$RefreshReg$(_c4, \"UserManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminDashboard","api","_s","activeTab","setActiveTab","className","children","fileName","_jsxFileName","lineNumber","columnNumber","TabButton","tabName","onClick","FlightManager","UserManager","EmployeeManager","FinancialReport","_c","_c2","Modal","onClose","_c3","_s2","users","setUsers","selectedUser","setSelectedUser","tokens","setTokens","fetchUsers","data","get","handleSelectUser","user","handleTokenUpdate","e","preventDefault","put","_id","map","u","alert","error","console","filter","role","name","email","onSubmit","type","value","onChange","target","_c4","$RefreshReg$"],"sources":["E:/Airline Fiscal Management System/frontend/src/components/AdminDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// const AdminDashboard = ({ api }) => {\r\n//   const [activeTab, setActiveTab] = useState(\"flights\");\r\n\r\n//   return (\r\n//     <div className=\"bg-white p-8 rounded-lg shadow-xl\">\r\n//       <h1 className=\"text-3xl font-bold mb-6\">Admin Dashboard</h1>\r\n//       <div className=\"border-b border-gray-200\">\r\n//         <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\r\n//           <button\r\n//             onClick={() => setActiveTab(\"flights\")}\r\n//             className={`${\r\n//               activeTab === \"flights\"\r\n//                 ? \"border-blue-500 text-blue-600\"\r\n//                 : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\r\n//             } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\r\n//           >\r\n//             Manage Flights\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveTab(\"users\")}\r\n//             className={`${\r\n//               activeTab === \"users\"\r\n//                 ? \"border-blue-500 text-blue-600\"\r\n//                 : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\r\n//             } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\r\n//           >\r\n//             Manage User Tokens\r\n//           </button>\r\n//         </nav>\r\n//       </div>\r\n\r\n//       <div className=\"mt-8\">\r\n//         {activeTab === \"flights\" && <FlightManager api={api} />}\r\n//         {activeTab === \"users\" && <UserManager api={api} />}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const FlightManager = ({ api }) => {\r\n//   const [flights, setFlights] = useState([]);\r\n//   const [formData, setFormData] = useState({\r\n//     flightNumber: \"\",\r\n//     origin: \"\",\r\n//     destination: \"\",\r\n//     departureTime: \"\",\r\n//     arrivalTime: \"\",\r\n//     price: \"\",\r\n//     totalSeats: 60,\r\n//   });\r\n//   const [editingFlight, setEditingFlight] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchFlights = async () => {\r\n//       const { data } = await api.get(\"/flights\");\r\n//       setFlights(data);\r\n//     };\r\n//     fetchFlights();\r\n//   }, [api]);\r\n\r\n//   const handleChange = (e) =>\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       if (editingFlight) {\r\n//         // Update existing flight\r\n//         const { data } = await api.put(\r\n//           `/admin/flights/${editingFlight._id}`,\r\n//           formData\r\n//         );\r\n//         setFlights(flights.map((f) => (f._id === data._id ? data : f)));\r\n//       } else {\r\n//         // Add new flight\r\n//         const { data } = await api.post(\"/admin/flights\", formData);\r\n//         setFlights([...flights, data]);\r\n//       }\r\n//       resetForm();\r\n//     } catch (error) {\r\n//       console.error(\"Failed to save flight\", error);\r\n//       alert(\"Error: Could not save flight.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (flight) => {\r\n//     setEditingFlight(flight);\r\n//     setFormData({\r\n//       flightNumber: flight.flightNumber,\r\n//       origin: flight.origin,\r\n//       destination: flight.destination,\r\n//       // Formatting date for input type datetime-local\r\n//       departureTime: new Date(flight.departureTime).toISOString().slice(0, 16),\r\n//       arrivalTime: new Date(flight.arrivalTime).toISOString().slice(0, 16),\r\n//       price: flight.price,\r\n//       totalSeats: flight.totalSeats,\r\n//     });\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setEditingFlight(null);\r\n//     setFormData({\r\n//       flightNumber: \"\",\r\n//       origin: \"\",\r\n//       destination: \"\",\r\n//       departureTime: \"\",\r\n//       arrivalTime: \"\",\r\n//       price: \"\",\r\n//       totalSeats: 60,\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form\r\n//         onSubmit={handleSubmit}\r\n//         className=\"mb-8 p-4 border rounded-lg grid grid-cols-2 gap-4\"\r\n//       >\r\n//         <h3 className=\"col-span-2 text-xl font-semibold\">\r\n//           {editingFlight ? \"Edit Flight\" : \"Add New Flight\"}\r\n//         </h3>\r\n//         <input\r\n//           name=\"flightNumber\"\r\n//           value={formData.flightNumber}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Flight Number\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"origin\"\r\n//           value={formData.origin}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Origin\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"destination\"\r\n//           value={formData.destination}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Destination\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"price\"\r\n//           type=\"number\"\r\n//           value={formData.price}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Price\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"departureTime\"\r\n//           type=\"datetime-local\"\r\n//           value={formData.departureTime}\r\n//           onChange={handleChange}\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"arrivalTime\"\r\n//           type=\"datetime-local\"\r\n//           value={formData.arrivalTime}\r\n//           onChange={handleChange}\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <div className=\"col-span-2 flex justify-end space-x-2\">\r\n//           {editingFlight && (\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={resetForm}\r\n//               className=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           )}\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n//           >\r\n//             {editingFlight ? \"Update Flight\" : \"Add Flight\"}\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n\r\n//       <div>\r\n//         <h3 className=\"text-xl font-semibold mb-4\">Existing Flights</h3>\r\n//         <div className=\"space-y-2\">\r\n//           {flights.map((flight) => (\r\n//             <div\r\n//               key={flight._id}\r\n//               className=\"flex justify-between items-center p-2 border rounded\"\r\n//             >\r\n//               <span>\r\n//                 {flight.flightNumber} - {flight.origin} to {flight.destination}\r\n//               </span>\r\n//               <button\r\n//                 onClick={() => handleEdit(flight)}\r\n//                 className=\"bg-yellow-500 text-white px-3 py-1 rounded text-sm\"\r\n//               >\r\n//                 Edit\r\n//               </button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const UserManager = ({ api }) => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [selectedUser, setSelectedUser] = useState(null);\r\n//   const [tokens, setTokens] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       const { data } = await api.get(\"/admin/users\");\r\n//       setUsers(data);\r\n//     };\r\n//     fetchUsers();\r\n//   }, [api]);\r\n\r\n//   const handleSelectUser = (user) => {\r\n//     setSelectedUser(user);\r\n//     setTokens(user.tokens);\r\n//   };\r\n\r\n//   const handleTokenUpdate = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!selectedUser) return;\r\n//     try {\r\n//       const { data } = await api.put(\r\n//         `/admin/users/${selectedUser._id}/tokens`,\r\n//         { tokens }\r\n//       );\r\n//       setUsers(users.map((u) => (u._id === data.user._id ? data.user : u)));\r\n//       alert(\"Tokens updated successfully!\");\r\n//     } catch (error) {\r\n//       console.error(\"Failed to update tokens\", error);\r\n//       alert(\"Error: Could not update tokens.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n//       <div>\r\n//         <h3 className=\"text-xl font-semibold mb-4\">All Users</h3>\r\n//         <div className=\"space-y-2\">\r\n//           {users\r\n//             .filter((u) => u.role === \"user\")\r\n//             .map((user) => (\r\n//               <div\r\n//                 key={user._id}\r\n//                 className=\"flex justify-between items-center p-2 border rounded\"\r\n//               >\r\n//                 <span>\r\n//                   {user.name} ({user.email}) - Tokens: {user.tokens}\r\n//                 </span>\r\n//                 <button\r\n//                   onClick={() => handleSelectUser(user)}\r\n//                   className=\"bg-green-500 text-white px-3 py-1 rounded text-sm\"\r\n//                 >\r\n//                   Manage\r\n//                 </button>\r\n//               </div>\r\n//             ))}\r\n//         </div>\r\n//       </div>\r\n//       {selectedUser && (\r\n//         <div className=\"p-4 border rounded-lg\">\r\n//           <h3 className=\"text-xl font-semibold mb-4\">\r\n//             Manage Tokens for {selectedUser.name}\r\n//           </h3>\r\n//           <form onSubmit={handleTokenUpdate}>\r\n//             <label className=\"block mb-2\">Set Token Amount:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               value={tokens}\r\n//               onChange={(e) => setTokens(e.target.value)}\r\n//               className=\"w-full p-2 border rounded mb-4\"\r\n//             />\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"w-full bg-blue-500 text-white px-4 py-2 rounded\"\r\n//             >\r\n//               Update Tokens\r\n//             </button>\r\n//           </form>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n\r\n// frontend/src/components/AdminDashboard.js\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// --- Main Admin Dashboard Component ---\r\nconst AdminDashboard = ({ api }) => {\r\n  const [activeTab, setActiveTab] = useState(\"flights\"); // 'flights', 'users', 'employees', 'report'\r\n\r\n  return (\r\n    <div className=\"bg-white p-8 rounded-lg shadow-xl min-h-[600px]\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Admin Dashboard</h1>\r\n      <div className=\"border-b border-gray-200\">\r\n        <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\r\n          <TabButton\r\n            activeTab={activeTab}\r\n            tabName=\"flights\"\r\n            onClick={setActiveTab}\r\n          >\r\n            Manage Flights & Costs\r\n          </TabButton>\r\n          <TabButton\r\n            activeTab={activeTab}\r\n            tabName=\"users\"\r\n            onClick={setActiveTab}\r\n          >\r\n            Manage User Tokens\r\n          </TabButton>\r\n          <TabButton\r\n            activeTab={activeTab}\r\n            tabName=\"employees\"\r\n            onClick={setActiveTab}\r\n          >\r\n            Employee Management\r\n          </TabButton>\r\n          <TabButton\r\n            activeTab={activeTab}\r\n            tabName=\"report\"\r\n            onClick={setActiveTab}\r\n          >\r\n            Financial Report\r\n          </TabButton>\r\n        </nav>\r\n      </div>\r\n\r\n      <div className=\"mt-8\">\r\n        {activeTab === \"flights\" && <FlightManager api={api} />}\r\n        {activeTab === \"users\" && <UserManager api={api} />}\r\n        {activeTab === \"employees\" && <EmployeeManager api={api} />}\r\n        {activeTab === \"report\" && <FinancialReport api={api} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- Helper Components for Tabs and Modals ---\r\nconst TabButton = ({ activeTab, tabName, onClick, children }) => (\r\n  <button\r\n    onClick={() => onClick(tabName)}\r\n    className={`${\r\n      activeTab === tabName\r\n        ? \"border-blue-500 text-blue-600\"\r\n        : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\r\n    } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm transition-colors`}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nconst Modal = ({ children, onClose }) => (\r\n  <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-center items-center\">\r\n    <div className=\"bg-white p-8 rounded-lg shadow-2xl w-full max-w-md relative\">\r\n      <button\r\n        onClick={onClose}\r\n        className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-800 text-2xl\"\r\n      >\r\n        &times;\r\n      </button>\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// // --- Flight & Cost Manager Sub-component ---\r\n// const FlightManager = ({ api }) => {\r\n//   const [flights, setFlights] = useState([]);\r\n//   const [formData, setFormData] = useState({\r\n//     flightNumber: \"\",\r\n//     origin: \"\",\r\n//     destination: \"\",\r\n//     departureTime: \"\",\r\n//     arrivalTime: \"\",\r\n//     price: \"\",\r\n//     totalSeats: 60,\r\n//   });\r\n//   const [editingFlight, setEditingFlight] = useState(null);\r\n//   const [isCostModalOpen, setIsCostModalOpen] = useState(false);\r\n//   const [selectedFlightForCost, setSelectedFlightForCost] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchFlights();\r\n//   }, []);\r\n\r\n//   const fetchFlights = async () => {\r\n//     const { data } = await api.get(\"/flights\");\r\n//     setFlights(data);\r\n//   };\r\n\r\n//   const handleChange = (e) =>\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       if (editingFlight) {\r\n//         const { data } = await api.put(\r\n//           `/admin/flights/${editingFlight._id}`,\r\n//           formData\r\n//         );\r\n//         setFlights(flights.map((f) => (f._id === data._id ? data : f)));\r\n//       } else {\r\n//         const { data } = await api.post(\"/admin/flights\", formData);\r\n//         setFlights([...flights, data]);\r\n//       }\r\n//       resetForm();\r\n//     } catch (error) {\r\n//       console.error(\"Failed to save flight\", error);\r\n//       alert(\"Error: Could not save flight.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (flight) => {\r\n//     setEditingFlight(flight);\r\n//     setFormData({\r\n//       flightNumber: flight.flightNumber,\r\n//       origin: flight.origin,\r\n//       destination: flight.destination,\r\n//       departureTime: new Date(flight.departureTime).toISOString().slice(0, 16),\r\n//       arrivalTime: new Date(flight.arrivalTime).toISOString().slice(0, 16),\r\n//       price: flight.price,\r\n//       totalSeats: flight.totalSeats,\r\n//     });\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setEditingFlight(null);\r\n//     setFormData({\r\n//       flightNumber: \"\",\r\n//       origin: \"\",\r\n//       destination: \"\",\r\n//       departureTime: \"\",\r\n//       arrivalTime: \"\",\r\n//       price: \"\",\r\n//       totalSeats: 60,\r\n//     });\r\n//   };\r\n\r\n//   const openCostModal = (flight) => {\r\n//     setSelectedFlightForCost(flight);\r\n//     setIsCostModalOpen(true);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form\r\n//         onSubmit={handleSubmit}\r\n//         className=\"mb-8 p-4 border rounded-lg grid grid-cols-1 md:grid-cols-2 gap-4\"\r\n//       >\r\n//         <h3 className=\"col-span-1 md:col-span-2 text-xl font-semibold\">\r\n//           {editingFlight ? \"Edit Flight\" : \"Add New Flight\"}\r\n//         </h3>\r\n//         <input\r\n//           name=\"flightNumber\"\r\n//           value={formData.flightNumber}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Flight Number\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"origin\"\r\n//           value={formData.origin}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Origin\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"destination\"\r\n//           value={formData.destination}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Destination\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"price\"\r\n//           type=\"number\"\r\n//           value={formData.price}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Price\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"departureTime\"\r\n//           type=\"datetime-local\"\r\n//           value={formData.departureTime}\r\n//           onChange={handleChange}\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"arrivalTime\"\r\n//           type=\"datetime-local\"\r\n//           value={formData.arrivalTime}\r\n//           onChange={handleChange}\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <div className=\"col-span-1 md:col-span-2 flex justify-end space-x-2\">\r\n//           {editingFlight && (\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={resetForm}\r\n//               className=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           )}\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n//           >\r\n//             {editingFlight ? \"Update Flight\" : \"Add Flight\"}\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n\r\n//       <div>\r\n//         <h3 className=\"text-xl font-semibold mb-4\">Existing Flights</h3>\r\n//         <div className=\"space-y-2\">\r\n//           {flights.map((flight) => (\r\n//             <div\r\n//               key={flight._id}\r\n//               className=\"flex justify-between items-center p-3 border rounded-lg bg-gray-50\"\r\n//             >\r\n//               <span>\r\n//                 {flight.flightNumber} - {flight.origin} to {flight.destination}\r\n//               </span>\r\n//               <div className=\"space-x-2\">\r\n//                 <button\r\n//                   onClick={() => handleEdit(flight)}\r\n//                   className=\"bg-yellow-500 text-white px-3 py-1 rounded text-sm hover:bg-yellow-600\"\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => openCostModal(flight)}\r\n//                   className=\"bg-cyan-500 text-white px-3 py-1 rounded text-sm hover:bg-cyan-600\"\r\n//                 >\r\n//                   Manage Costs\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//       {isCostModalOpen && (\r\n//         <CostManagerModal\r\n//           flight={selectedFlightForCost}\r\n//           api={api}\r\n//           onClose={() => setIsCostModalOpen(false)}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // --- Cost Manager Modal ---\r\n// const CostManagerModal = ({ flight, api, onClose }) => {\r\n//   const [costs, setCosts] = useState([]);\r\n//   const [costType, setCostType] = useState(\"Fuel\");\r\n//   const [amount, setAmount] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchCosts = async () => {\r\n//       const { data } = await api.get(`/admin/costs/${flight._id}`);\r\n//       setCosts(data);\r\n//     };\r\n//     fetchCosts();\r\n//   }, [api, flight._id]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const { data } = await api.post(\"/admin/costs\", {\r\n//         flight: flight._id,\r\n//         costType,\r\n//         amount,\r\n//         description,\r\n//       });\r\n//       setCosts([...costs, data]);\r\n//       setAmount(\"\");\r\n//       setDescription(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Failed to add cost\", error);\r\n//       alert(\"Error: Could not add cost.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Modal onClose={onClose}>\r\n//       <h2 className=\"text-2xl font-bold mb-4\">\r\n//         Manage Costs for {flight.flightNumber}\r\n//       </h2>\r\n//       <form onSubmit={handleSubmit} className=\"mb-6\">\r\n//         <h3 className=\"text-lg font-semibold mb-2\">Add New Cost</h3>\r\n//         <div className=\"grid grid-cols-2 gap-4\">\r\n//           <select\r\n//             value={costType}\r\n//             onChange={(e) => setCostType(e.target.value)}\r\n//             className=\"p-2 border rounded\"\r\n//           >\r\n//             <option>Fuel</option>\r\n//             <option>Maintenance</option>\r\n//           </select>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={amount}\r\n//             onChange={(e) => setAmount(e.target.value)}\r\n//             placeholder=\"Amount (₹)\"\r\n//             className=\"p-2 border rounded\"\r\n//             required\r\n//           />\r\n//           <input\r\n//             value={description}\r\n//             onChange={(e) => setDescription(e.target.value)}\r\n//             placeholder=\"Description (optional)\"\r\n//             className=\"p-2 border rounded col-span-2\"\r\n//           />\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           className=\"mt-4 w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n//         >\r\n//           Add Cost\r\n//         </button>\r\n//       </form>\r\n//       <div>\r\n//         <h3 className=\"text-lg font-semibold mb-2\">Existing Costs</h3>\r\n//         <div className=\"space-y-2 max-h-48 overflow-y-auto\">\r\n//           {costs.length > 0 ? (\r\n//             costs.map((cost) => (\r\n//               <div\r\n//                 key={cost._id}\r\n//                 className=\"flex justify-between p-2 bg-gray-100 rounded\"\r\n//               >\r\n//                 <span>\r\n//                   {cost.costType}: ₹{cost.amount}\r\n//                 </span>\r\n//                 <span className=\"text-sm text-gray-500\">\r\n//                   {cost.description}\r\n//                 </span>\r\n//               </div>\r\n//             ))\r\n//           ) : (\r\n//             <p className=\"text-gray-500\">No costs recorded for this flight.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n// // --- Employee Manager Sub-component ---\r\n// const EmployeeManager = ({ api }) => {\r\n//   const [employees, setEmployees] = useState([]);\r\n//   const [formData, setFormData] = useState({ name: \"\", role: \"\", salary: \"\" });\r\n\r\n//   useEffect(() => {\r\n//     const fetchEmployees = async () => {\r\n//       const { data } = await api.get(\"/admin/employees\");\r\n//       setEmployees(data);\r\n//     };\r\n//     fetchEmployees();\r\n//   }, [api]);\r\n\r\n//   const handleChange = (e) =>\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const { data } = await api.post(\"/admin/employees\", formData);\r\n//       setEmployees([...employees, data]);\r\n//       setFormData({ name: \"\", role: \"\", salary: \"\" });\r\n//     } catch (error) {\r\n//       console.error(\"Failed to add employee\", error);\r\n//       alert(\"Error: Could not add employee.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form\r\n//         onSubmit={handleSubmit}\r\n//         className=\"mb-8 p-4 border rounded-lg grid grid-cols-1 md:grid-cols-3 gap-4\"\r\n//       >\r\n//         <h3 className=\"col-span-1 md:col-span-3 text-xl font-semibold\">\r\n//           Add New Employee\r\n//         </h3>\r\n//         <input\r\n//           name=\"name\"\r\n//           value={formData.name}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Employee Name\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"role\"\r\n//           value={formData.role}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Role (e.g., Pilot, Agent)\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"salary\"\r\n//           type=\"number\"\r\n//           value={formData.salary}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Salary (Monthly, ₹)\"\r\n//           className=\"p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <div className=\"col-span-1 md:col-span-3\">\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded w-full\"\r\n//           >\r\n//             Add Employee\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//       <div>\r\n//         <h3 className=\"text-xl font-semibold mb-4\">Employee List</h3>\r\n//         <div className=\"space-y-2\">\r\n//           {employees.map((emp) => (\r\n//             <div\r\n//               key={emp._id}\r\n//               className=\"grid grid-cols-3 gap-4 items-center p-2 border rounded\"\r\n//             >\r\n//               <span className=\"font-medium\">{emp.name}</span>\r\n//               <span className=\"text-gray-600\">{emp.role}</span>\r\n//               <span className=\"text-green-600 font-semibold\">\r\n//                 ₹{emp.salary.toLocaleString()}\r\n//               </span>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // --- Financial Report Sub-component ---\r\n// const FinancialReport = ({ api }) => {\r\n//   const [report, setReport] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const fetchReport = async () => {\r\n//       try {\r\n//         const { data } = await api.get(\"/admin/report\");\r\n//         setReport(data);\r\n//       } catch (error) {\r\n//         console.error(\"Failed to fetch report\", error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n//     fetchReport();\r\n//   }, [api]);\r\n\r\n//   if (loading) return <p>Generating report...</p>;\r\n//   if (!report) return <p>Could not generate report.</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2 className=\"text-2xl font-bold mb-6\">Financial Summary</h2>\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-red-100 p-4 rounded-lg\">\r\n//           <h3 className=\"text-red-800 font-bold\">Total Fuel Cost</h3>\r\n//           <p className=\"text-2xl font-semibold\">\r\n//             ₹{report.summary.totalFuelCost.toLocaleString()}\r\n//           </p>\r\n//         </div>\r\n//         <div className=\"bg-yellow-100 p-4 rounded-lg\">\r\n//           <h3 className=\"text-yellow-800 font-bold\">Total Maintenance Cost</h3>\r\n//           <p className=\"text-2xl font-semibold\">\r\n//             ₹{report.summary.totalMaintenanceCost.toLocaleString()}\r\n//           </p>\r\n//         </div>\r\n//         <div className=\"bg-blue-100 p-4 rounded-lg\">\r\n//           <h3 className=\"text-blue-800 font-bold\">Total Salary Expenditure</h3>\r\n//           <p className=\"text-2xl font-semibold\">\r\n//             ₹{report.summary.totalSalaryCost.toLocaleString()}\r\n//           </p>\r\n//         </div>\r\n//         <div className=\"bg-green-100 p-4 rounded-lg\">\r\n//           <h3 className=\"text-green-800 font-bold\">Total Operational Cost</h3>\r\n//           <p className=\"text-2xl font-semibold\">\r\n//             ₹{report.summary.operationalCost.toLocaleString()}\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n//         <div>\r\n//           <h3 className=\"text-xl font-semibold mb-4\">\r\n//             Detailed Cost Breakdown\r\n//           </h3>\r\n//           <div className=\"space-y-2 max-h-96 overflow-y-auto\">\r\n//             {report.allCosts.map((cost) => (\r\n//               <div\r\n//                 key={cost._id}\r\n//                 className=\"grid grid-cols-3 gap-4 p-2 border rounded\"\r\n//               >\r\n//                 <span>{cost.flight?.flightNumber || \"N/A\"}</span>\r\n//                 <span>{cost.costType}</span>\r\n//                 <span className=\"font-semibold\">\r\n//                   ₹{cost.amount.toLocaleString()}\r\n//                 </span>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         <div>\r\n//           <h3 className=\"text-xl font-semibold mb-4\">Employee Salary List</h3>\r\n//           <div className=\"space-y-2 max-h-96 overflow-y-auto\">\r\n//             {report.allEmployees.map((emp) => (\r\n//               <div\r\n//                 key={emp._id}\r\n//                 className=\"grid grid-cols-3 gap-4 p-2 border rounded\"\r\n//               >\r\n//                 <span className=\"font-medium\">{emp.name}</span>\r\n//                 <span className=\"text-gray-600\">{emp.role}</span>\r\n//                 <span className=\"font-semibold\">\r\n//                   ₹{emp.salary.toLocaleString()}\r\n//                 </span>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// --- User Manager Sub-component ---\r\nconst UserManager = ({ api }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [tokens, setTokens] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const { data } = await api.get(\"/admin/users\");\r\n      setUsers(data);\r\n    };\r\n    fetchUsers();\r\n  }, [api]);\r\n\r\n  const handleSelectUser = (user) => {\r\n    setSelectedUser(user);\r\n    setTokens(user.tokens);\r\n  };\r\n\r\n  const handleTokenUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedUser) return;\r\n    try {\r\n      const { data } = await api.put(\r\n        `/admin/users/${selectedUser._id}/tokens`,\r\n        { tokens }\r\n      );\r\n      setUsers(users.map((u) => (u._id === data.user._id ? data.user : u)));\r\n      alert(\"Tokens updated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Failed to update tokens\", error);\r\n      alert(\"Error: Could not update tokens.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-4\">All Users</h3>\r\n        <div className=\"space-y-2\">\r\n          {users\r\n            .filter((u) => u.role === \"user\")\r\n            .map((user) => (\r\n              <div\r\n                key={user._id}\r\n                className=\"flex justify-between items-center p-2 border rounded\"\r\n              >\r\n                <span>\r\n                  {user.name} ({user.email}) - Tokens: {user.tokens}\r\n                </span>\r\n                <button\r\n                  onClick={() => handleSelectUser(user)}\r\n                  className=\"bg-green-500 text-white px-3 py-1 rounded text-sm\"\r\n                >\r\n                  Manage\r\n                </button>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      {selectedUser && (\r\n        <div className=\"p-4 border rounded-lg\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">\r\n            Manage Tokens for {selectedUser.name}\r\n          </h3>\r\n          <form onSubmit={handleTokenUpdate}>\r\n            <label className=\"block mb-2\">Set Token Amount:</label>\r\n            <input\r\n              type=\"number\"\r\n              value={tokens}\r\n              onChange={(e) => setTokens(e.target.value)}\r\n              className=\"w-full p-2 border rounded mb-4\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-blue-500 text-white px-4 py-2 rounded\"\r\n            >\r\n              Update Tokens\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"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EAAAC,QAAA,eACzFP,OAAA;IAAKM,SAAS,EAAC,6DAA6D;IAAAC,QAAA,gBAC1EP,OAAA;MACEc,OAAO,EAAEQ,OAAQ;MACjBhB,SAAS,EAAC,mEAAmE;MAAAC,QAAA,EAC9E;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRJ,QAAQ;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACN;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}